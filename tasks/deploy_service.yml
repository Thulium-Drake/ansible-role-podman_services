---
- name: 'Set up networks'
  ansible.builtin.import_tasks: 'network.yml'
  when: podman_networks[service['name']] | default([]) | length > 0

- name: 'Set up volumes'
  ansible.builtin.import_tasks: 'volume.yml'
  when: podman_volumes[service['name']] | default([]) | length > 0

- name: 'Set merged containers fact'
  ansible.builtin.set_fact:
    merged_service_containers: "{{ lookup('community.general.merge_variables', 'podman_service_containers_', pattern_type='prefix') }}"
  run_once: true

- name: "Deploy containers for {{ service['name'] }}"
  containers.podman.podman_container:
    name: >-
      {{
        (item['key'] == service['name']) |
        ternary(
          service['name'],
          service['name'] + '-' + item['key']
        )
      }}
    state: "{{ (service['state'] | default('present') == 'present') | ternary('quadlet', 'absent') }}"
    auto_remove: true
    cap_add: "{{ item['value']['cap_add'] | default(omit) }}"
    command: "{{ item['value']['command'] | default(omit) }}"
    device: "{{ item['value']['device'] | default(omit) }}"
    dns: "{{ item['value']['dns'] | default(omit) }}"
    env: "{{ item['value']['env'] | default(omit) }}"
    healthcheck: "{{ item['value']['healthcheck'] | default(omit) }}"
    healthcheck_interval: "{{ item['value']['healthcheck_interval'] | default(omit) }}"
    healthcheck_retries: "{{ item['value']['healthcheck_retries'] | default(omit) }}"
    healthcheck_timeout: "{{ item['value']['healthcheck_timeout'] | default(omit) }}"
    image: "{{ item['value']['image'] }}"
    labels: "{{ item['value']['labels'] | default(omit) }}"
    network: "{{ item['value']['network'] | default(omit) }}"
    ports: "{{ item['value']['ports'] | default(omit) }}"
    privileged: "{{ item['value']['privileged'] | default(omit) }}"
    pull: 'newer'
    quadlet_options: "{{ item['value']['quadlet_options'] | default(podman_quadlet_options) }}"
    user: "{{ item['value']['user'] | default(omit) }}"
    security_opt: "{{ item['value']['security_opt'] | default(omit) }}"
    volume: "{{ item['value']['volume'] | default(omit) }}"
  loop: "{{ merged_service_containers[service['name']] | dict2items }}"
  register: 'service_config'
  notify: 'Restart changed services'
  no_log: "{{ not (podman_debug | default(false)) }}"

- name: 'Add to changed service list'
  ansible.builtin.import_tasks: 'changed_service.yml'
