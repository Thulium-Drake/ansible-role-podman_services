---
- name: 'Ensure Vaultwarden storage directories'
  ansible.builtin.file:
    path: "{{ podman_data_dir }}/vaultwarden"
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'

- name: 'Ensure Vaultwarden container'
  containers.podman.podman_container:
    name: 'vaultwarden'
    image: "{{ podman_default_registry }}/vaultwarden/server:{{ vaultwarden_version }}"
    state: 'present'
    auto_remove: true
    env:
      ROCKET_PORT: 3000
      DOMAIN: "https://{{ vaultwarden_domain }}"
      SIGNUPS_ALLOWED: "{{ vaultwarden_signups_allowed }}"
      SIGNUPS_VERIFY: "{{ vaultwarden_signups_verify }}"
      SIGNUPS_DOMAINS_WHITELIST: "{{ vaultwarden_signup_whitelist | join(',') | default(omit, true) }}"
      INVITATIONS_ALLOWED: "{{ vaultwarden_invitations_allowed }}"
      ADMIN_TOKEN: "{{ vaultwarden_admin_token | default(omit, true) }}"
      SMTP_HOST: "{{ vaultwarden_smtp_server }}"
      SMTP_PORT: "{{ vaultwarden_smtp_port }}"
      SMTP_FROM: "{{ vaultwarden_smtp_from }}"
      SMTP_SECURITY: "{{ vaultwarden_smtp_ssl | ternary('tls', 'off') }}"
      SMTP_USERNAME: "{{ vaultwarden_smtp_user | default(omit, true) }}"
      SMTP_PASSWORD: "{{ vaultwarden_smtp_password | default(omit, true) }}"
    ports:
      - "{{ vaultwarden_listen_uri }}:3000"
    volume:
      - "{{ podman_data_dir }}/vaultwarden:/data:z"
    generate_systemd: "{{ podman_services_systemd_config }}"
    labels:
      io.containers.autoupdate: 'registry'
  register: 'service_config'

- name: 'Add service to changelist'  # noqa no-handler
  ansible.builtin.set_fact:
    podman_services_changed: "{{ podman_services_changed + ['vaultwarden'] }}"
  when: service_config['changed']
